#Дан список: ['в', '5', 'часов', '17', 'минут', 'температура',
#  'воздуха', 'была', '+5', 'градусов'] Необходимо его обработать
#  — обособить каждое целое число (вещественные не трогаем) 
# кавычками (добавить кавычку до и кавычку после элемента списка,
#  являющегося числом) и дополнить нулём до двух целочисленных 
# разрядов:['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут',
#  'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Сформировать из обработанного списка строку: в "05" часов "17"
#  минут температура воздуха была "+05" градусов
# Подумать, какое условие записать, чтобы выявить числа среди 
# элементов списка? Как модифицировать это условие для чисел со 
# знаком? Примечание: если обособление чисел кавычками не будет 
# получаться - можете вернуться к его реализации позже. 
# Главное: дополнить числа до двух разрядов нулём!

txt=['в', '5', 'часов', '17', 'минут', 'температура','воздуха', 'была', '+5', 'градусов']

def add_quotes(txt):
    idx=0
    while(True):
        val=txt[idx]
        if check_is_digit(val[0]) or [0]=='+' or val[0]=='-':
            txt.insert(idx,'"')
            txt.insert(idx+2,'"')
            idx+=2
        else: idx+=1
        if idx>=len(txt): break
    return txt

def get_result(txt):
    for x in txt: 
        if x=='"': txt.remove(x)
    for idx,val in enumerate(txt):
        if check_is_digit(val): txt[idx]=f'"{add_zero(val)}"'
    return ' '.join(txt)

def check_is_digit(el):
    if el.isdigit(): return True
    elif el[0]=='+' or el[0]=='-': return True
    else: return False

def add_zero(el):
    if el[0]=='+' or el[0]=='-':
        symbol=el[0]
        el=el[1:len(el)]
        if(int(el)<10): return symbol+'0'+el
    if int(el)>10: return el
    else: return '0'+el

print(get_result(add_quotes(txt)))